#!/usr/bin/env bash

# no argument passed -> install Atom
if [[ -z "$1" ]]; then
  # if operating system is Ubuntu on Windows
  if grep -q Microsoft /proc/version 1>/dev/null 2>/dev/null; then
      # install atom
      yes | cp -rf scripts/wsl/atom_install.bat ~/winhome
      cmd="powershell.exe -command Start-Process powershell -Verb runAs -ArgumentList 'cd \$env:HOMEPATH;./atom_install.bat'"
      $cmd
      exit
  fi

  # if operating system is macOS
  if [[ $(uname -s) = 'Darwin' ]]; then
    # Install Atom via Homebrew
    brew cask install atom
  else
    # install Atom for linux
    sudo add-apt-repository ppa:webupd8team/atom
    sudo apt update
    sudo apt install atom 
  fi

  # if apm exists (atom CLI tools installed) install these packages
  if which apm; then
    apm install aligner aligner-scss aligner-css aligner-javascript aligner-ruby atom-beautify \
    editorconfig linter-ui-default busy-signal esformatter fixmyjs git-diff-details git-history \
    git-plus language-markdown less-than-slash linter linter-stylelint linter-eslint \
    linter-markdown linter-rubocop linter-tidy \
    markdown-writer sort-lines language-ember-htmlbars intentions linter-sass-lint \
    standardjs-snippets ruby-block open-in-browser 
  else
    echo -e "\napm - command not found. Open Atom and select atom option at top, then 'Install Shell Commands'. Rerun script. If issues, ask for assistance. \n"
  fi

# "fix" arg passsed, update rubocop binary and other settings
elif [[ "$1" = "fix" ]]; then

  # if operating system is Windows 10 + WSL
  if grep -q Microsoft /proc/version 1>/dev/null 2>/dev/null; then
    # adds correct line ending (LF) to all files generated by default in atom
    echo "atom.config.set(\"line-ending-selector.defaultLineEnding\", \"LF\")" >> ~/winhome/.atom/init.coffee

    # Atom will use binaries installed in WSL to run linting and other
    # functionality. In order for Atom, a Windows 10 program to use WSL
    # binaries, we need simple batch scripts to allow calling WSL binaries
    # from Atom.

    # WSL rubocop batch file
    cat <<EOF > ~/winhome/.atom/rubocop.bat
@echo off
bash.exe -c "$(rbenv which rubocop) %*"
EOF

    # set rubocop path to batch file
    echo "atom.config.set(\"linter-rubocop.command\", \"%USERPROFILE%/.atom/rubocop.bat\")" >> ~/winhome/.atom/init.coffee

    # FIX ATOM 1.13.x ISSUE THAT DOES NOT WORK WITH ALIAS PROVIDED IN `/scripts/bash.sh`

    # get atom binary dir
    atom_dir=$(echo "$(which atom)" | sed -e 's/\/atom$//')

    # navigate up a directory and get the atom version folder name
    cd $atom_dir
    cd ..
    atom_version=$(find . -maxdepth 1 -type d -name 'app-*' -printf '%P\n')

    # add atom script to ~./.bashrc to handle opening atom
    cat <<EOF >> ~/.bashrc
function atom() {
  if [ -z "\$1" ]; then
    cmd.exe /c "%USERPROFILE%\\AppData\\Local\\atom\\$atom_version\\atom" > /dev/null 2>&1 &
  else
    full_bash_path=\$(realpath \$1)
    win_path=\$(wslpath -w \$full_bash_path)
    echo \$win_path
    cmd.exe /c "%USERPROFILE%\\AppData\\Local\\atom\\$atom_version\\atom \$win_path" > /dev/null 2>&1 &
  fi
}
EOF

    # backup ~/.bashrc
    cp ~/.bashrc ~/.bashrc.bak

    # comment out previous atom alias
    sed 's/"subl" \\/"subl")/g' ~/.bashrc.bak | sed 's/"atom")/# "atom")/g' > ~/.bashrc.tmp

    # replace ~/.bashrc with fixed version
    mv ~/.bashrc.tmp ~/.bashrc

    # install Windows 10 html-tidy to use with linter-tidy
    powershell.exe -command Start-Process powershell -Verb runAs -ArgumentList { choco install -y -f html-tidy }
  
  else
    # sets up correct rubocop path for atom rubocop-linter
    echo "atom.config.set(\"linter-rubocop.command\", \"`rbenv which rubocop`\")" >> ~/.atom/init.coffee
  fi

  atom .
  echo -e "\n"
  read -p "Please wait for Atom to open, and then close it with CMD+Q on macOS (or CTRL+Q on Linux) and press Enter to continue"

  apm disable autocomplete-snippets
  # turn on autosave (manual check in package settings still part of installfest)
  apm enable autosave >> /dev/null 2>&1
fi
